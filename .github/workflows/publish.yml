name: Publish

# This builds and pushes the package to NPM and a Docker image to Docker Hub.
# If something goes wrong, then the package/image is not published. The error should be
# corrected and the release and tag should be deleted before trying again.

on:
  release:
    types: [published]
permissions:
  contents: read

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Catch package.json version mismatch
        run: |
          ver=v$(node -p "require('./package.json').version")
          echo "Version in package.json: $ver"
          echo "Version in release: ${{ github.event.release.tag_name }}"
          if [ "$ver" != "${{ github.event.release.tag_name }}" ]; then
            exit 1
          fi

      - uses: pnpm/action-setup@v4

      - name: Install packages
        run: pnpm i

      - name: Run CI
        run: pnpm run --if-present ci

      - name: Build project
        run: pnpm run --if-present build

      # Exclude tests in publish workflow due to special dependencies required.
      #- name: Run tests
      #  run: pnpm run --if-present test

      - run: npm publish --access public
        env:
          # setup-node creates an .npmrc that references NODE_AUTH_TOKEN
          # secrets.NPM_TOKEN must be provided in the repo settings.
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  build-and-publish-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: bitovi/n8n-nodes-markitdown
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
